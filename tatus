[33m5e815c2[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m Enhance timeout management and error handling across multiple components. Increase individual page load timeout to 25 seconds and browser creation timeout to 35 seconds. Improve browser health checks and connectivity tests, ensuring better handling of disconnected browsers. Update default timeouts for navigation in authentication processes to enhance reliability.
[33mdd70c7b[m Enhance command execution and browser management by implementing configurable timeouts for specific commands, improving error handling during page loads, and introducing graceful shutdown procedures. Optimize HTML fetching with concurrent loading strategies for better performance and reliability across multiple commands.
[33me783674[m[33m ([m[1;32mtest-branch[m[33m)[m Merge branch 'main' into test-branch
[33m1ff9a99[m[33m ([m[1;31morigin/test-branch[m[33m)[m Refactor navigation logic in profile and authentication commands to use 'domcontentloaded' for improved loading performance. Introduce timeout settings for page navigation to enhance reliability and ensure content is fully loaded before processing.
[33mcc14e81[m Refactor navigation logic in profile and authentication commands to ensure correct page targeting. Introduce handling for safe redirects during authentication, improving reliability in scenarios where navigation may lead to expected paths. This change enhances the overall robustness of page loading and user authentication processes.
[33m82d641b[m Refactor page navigation strategy to use 'domcontentloaded' wait condition and implement timeouts for improved reliability across multiple functions. This change enhances the handling of page loading during authentication and target navigation processes.
[33me0d4af1[m Improve page loading strategy across multiple commands by switching to 'domcontentloaded' wait condition and adding timeouts for better reliability. Enhance error handling for profile fetching and browser closure, and implement placeholder embeds for failed profile loads.
[33m4e290a0[m Refactor HTML fetching and state ID extraction in primary and update commands. Improve error handling and timeout management for page navigation. Streamline state data scraping logic to enhance reliability and performance, including better handling of blank or redirected pages.
[33mc02b4ee[m Remove outdated HTML files for U.S. Governors and House of Representatives from the project. Enhance the update command by adding a function to detect blank or redirected pages, improving data scraping reliability. Update scraping logic to skip invalid pages during state, race, and primary data retrieval.
[33mebdeb21[m Update README.md to enhance setup instructions and troubleshooting guidance. Add detailed quick start section, environment variable configuration, and commands overview. Improve clarity on cookie refresh process for Cloudflare challenges and include troubleshooting tips for command timeouts and resource issues.
[33me9dc0a1[m Enhance command execution timeout handling and improve HTML fetching logic in primary command. Introduce configurable command timeout and implement caching for state index to optimize performance. Update error handling for navigation issues and streamline state ID resolution process.
[33mb67fa60[m Implement resource management improvements in update command by adding a helper function to clear page resources, reducing memory usage during scraping. Adjust batch size for state, race, and primary data processing to mitigate timeouts and enhance performance. Improve error handling and user feedback during page recreation and final cleanup.
[33m9befb19[m Enhance state data scraping in update command by implementing a fallback mechanism for state IDs in case of loading failures. Update page loading strategy to use a longer timeout and different wait conditions for improved reliability. Improve error handling and user feedback during state, race, and primary data retrieval processes.
[33m01eafd1[m Refactor state data scraping in update command to dynamically retrieve state IDs from the index page instead of using a hardcoded list. Implement batch processing for scraping to improve performance and reduce timeouts. Enhance user feedback during scraping and improve error handling for state, race, and primary data retrieval.
[33made048b[m Implement race and primary data scraping in update command. Add parsing functions for race and primary data extraction, enhance user feedback during scraping, and improve error handling for state data retrieval.
[33mbe823bf[m Enhance update command to support scraping of state, race, and primary data. Introduce new parsing function for state data extraction and update command options accordingly. Improve user feedback during scraping process.
[33m357b0ec[m Refactor permission checks in analyze command to use canUseAnalyze function. Introduce hasPartyLeadershipRole for role-based access control, supporting both Democratic and Republican leadership roles.
[33mca9c596[m Enhance analyze command to support both Democratic and Republican party analysis. Introduce party-leaning states and update player distribution logic. Adjust AI recommendation prompts and embed formatting for clarity. Implement permission checks for command execution.
[33mb3f8189[m Add @anthropic-ai/sdk dependency version 0.67.0 to package.json and package-lock.json
[33me3d0305[m Refactor error handling in authenticateAndNavigate function for improved readability and consistency
[33mb30406f[m Implement comprehensive error handling and logging enhancements across the application. Added crash detection, uncaught exception handling, and improved command execution logging. Enhanced browser management with better error handling and resource limits. Updated error reporting to provide more context and user-friendly messages.
