const DEFAULT_UA =
  'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36';

const getEnv = (key, fallback = '') => {
  const value = process.env[key];
  return value === undefined || value === null || value === '' ? fallback : value;
};

const config = Object.freeze({
  baseUrl: getEnv('PPUSA_BASE_URL', 'https://powerplayusa.net'),
  loginPage: getEnv('PPUSA_LOGIN_PAGE', '/login'),
  email: getEnv('PPUSA_EMAIL') || null,
  password: getEnv('PPUSA_PASSWORD') || null,
  cookie: getEnv('PPUSA_COOKIE', ''),
  navTimeout: Number(getEnv('PPUSA_NAV_TIMEOUT_MS', '20000')) || 20000,
  debug: String(getEnv('PPUSA_DEBUG', 'false')).toLowerCase() === 'true',
  userAgent: getEnv('PPUSA_LOGIN_UA', DEFAULT_UA),
});

const selectors = Object.freeze({
  email: [
    'input[type="email"]',
    'input[name="email"]',
    'input[name="username"]',
    'input[name*="email" i]',
    'input[name*="user" i]',
    'input[id*="email" i]',
    'input[id*="login" i]',
    'input[placeholder*="email" i]',
  ],
  password: [
    'input[type="password"]',
    'input[name="password"]',
    'input[name*="pass" i]',
    'input[id*="pass" i]',
    'input[id*="password" i]',
    'input[placeholder*="password" i]',
  ],
  submit: [
    'button[type="submit"]',
    'input[type="submit"]',
    'button[name="login"]',
    'form button[type="submit"]',
    'form button',
    'button:has-text("Sign In")',
    'button:has-text("Log In")',
    'button:has-text("Login")',
    'button[id*="login" i]',
  ],
});

const toAbsoluteUrl = (maybeUrl) => {
  if (!maybeUrl) throw new Error('Target URL is required');
  if (/^https?:\/\//i.test(maybeUrl)) return maybeUrl;
  const base = config.baseUrl.endsWith('/') ? config.baseUrl.slice(0, -1) : config.baseUrl;
  const path = maybeUrl.startsWith('/') ? maybeUrl : `/${maybeUrl}`;
  return `${base}${path}`;
};

module.exports = {
  config,
  selectors,
  getEnv,
  toAbsoluteUrl,
};

